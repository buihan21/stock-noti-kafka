version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: alerts_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - pgdata-alerts:/var/lib/postgresql/data

  postgres-users:
    image: postgres:15
    container_name: postgres-users
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    networks:
      - app-network
    volumes:
      - pgdata-users:/var/lib/postgresql/data


  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db

  price-simulator:
    build: ./services/price-simulator
    depends_on:
      - kafka
    networks:
      - app-network

  alert-config:
    build: ./services/alert_config
    depends_on:
      - postgres
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - app-network

  notification-service:
    build: ./services/notification-service
    depends_on:
      - kafka
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - app-network

  user-service:
    build: ./services/user-service
    depends_on:
      - postgres-users
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - app-network

volumes:
  pgdata-alerts:
  pgdata-users:
  mongo-data:

networks:
  app-network:
